[tool.poetry]
name = "bookstore"
version = "0.1.0"
description = ""
authors = ["locemar <marcelon27@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11.9"
fastapi = "^0.111.0"
uvicorn = "^0.29.0"
pytest-watch = "^4.2.0"
pydantic-settings = "^2.2.1"
sqlalchemy = "^2.0.30"
alembic = "^1.13.1"
cerberus = "^1.3.5"
validator = "^0.7.1"


[tool.poetry.group.dev.dependencies]
pytest = "^8.2.0"
pytest-cov = "^5.0.0"
taskipy = "^1.12.2"
ruff = "^0.4.3"
httpx = "^0.27.0"
faker = "^25.1.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# ruff
[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']

[tool.ruff.format]
preview = true
quote-style = 'single'

# pytest
[tool.pytest.ini_options]
pythonpath = '.'
addopts = '-p no:warnings'
mock_use_standalone_module = true

[pytest-watch]
ignore = './integration-tests'
nobeep = true

[tool.taskipy.tasks]
lint = 'ruff check .; ruff check . --diff'
format = 'ruff check . --fix; ruff format .'
run = 'uvicorn app:app --reload'
pre_test = 'task lint'
test = 'pytest -s -x --cov=. -vv'
test_watch = 'task test; ptw --verbose --onpass "say passed" --onfail "say failed"'
post_test = 'coverage html'